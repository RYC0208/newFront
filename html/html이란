Html은 HyperText Markup Language를 의미함


HyperText는 하이퍼링크를 통해 어떤 문서에서 다른 문서로 접근할 수 있는 텍스트
-> 웹사이트 등을 이용하면 다른페이지로 이동하는 경험 -> 그때마다 누른 텍스트를 통틀어 HyperText라고 함

Markup은 콘텐츠를 표시하다라는 의미를 갖고 있음
-> 표시하다라는 의미로 html의 언어에 문법적 특성을 나타냄

Language는 말 그대로 언어를 뜻함
-> html은 언어(웹브라우저) 

따라서 Html은 하이퍼 텍스트와 콘텐츠를 표시해주는 언어다 라고 생각하면 됨

html은 웹페이지의 콘텐츠를 정의하기위한 언어이며 개발자는 html 코드로 웹페이지에 어떤 내용이 표시될지를 정의한 html 문서를 만든다

코드 작성 -> 웹브라우저에서 코드 해석 ( 렌더링 )

html문서란 파일의 확장자가 html, htm 이다

파일을 수정할 때 텍스트 편집기로 열고 결과를 확인하고 싶다면 웹브라우저로 열기

__________________________________________________________________________________________________________________________
;html은 언어이다

HTML의 문법은 딱 한가지 태그만 기억하면 된다

;태그란?
-> html 태그에서 정보(콘텐츠)를 정의하는 형식

태그 사용법 <>과 </> 기호를 사용해 시작과 끝을 표시함
각 태그는 콘텐츠를 감싸며, 태그명은 콘텐츠의 성격과 의미를 나타낸다

태그 사용 형태)
<태그명> 여기에 콘텐츠를 기입 </태그명>


;단일 태그

시작과 끝을 구분할 필요가 없는 태그도 존재하여
이를 단일태그라 하며, 단일 태그의 형식은 다음 예와 같다
<태그명 /> 또는 <태그명>

;속성

속성은 태그의 부가적인 기능을 정의하는 것으로, 선택사항임
속성은 시작 태그의 내부에 정의한다. 속성의 개수에는 특별한 제한이 없다

속성이 추가된 태그의 예)
<태그명 속성명="속성값"> 내용이 들어감</태그명>
<태그명 속성명="속성값" /> -> 단일태그!

태그명과 속성 정의는 공백으로 구분하여 큰 따옴표를 사용한다.

;주석

주석은 html코드내에 아무런 영향을 주지 않음
주로 코드에 대한 메모를 남기는 용도임

주석 예)
이건 컴퓨터에게 컴파일 되지 않는 내용임 사람에게만 보여짐! -->



<br> 줄바꿈
<hr> 줄
&nbsp; 공백
&emsp; 공백


;블록 레벨 요소
=> 자기가 속한 영역의 너비를 모두 차지하여 블록을 형성

;인라인 요소
=> 자기에게 필요한만큼의 공간을 차지함

;이미지 태그
-> <img src="표시할이미지 파일" alt="이미지 설명">
src 속성은 표시할 이미지의 위치정보, 파일명을 입력받음
서버에 위치한 이미지 파일이나 로컬 파일을 불러올 수 있음


alt는 이미지가 로딩되기 전이나, 이미지 로딩에 실패한 경우 이미지 대신에 대체 텍스트를 출력
이미지를 볼 수 없는 상황에 음성인식으로 이미지 대신에 출력가능
넓이를 설정 width="너비값" height="높이값" px단위로 설정 가능


;컨테이너 태그
=> 컨텐츠나 레이아웃에 아무련 영향도 주지않고, 단지 다른 요소를 여럿 묶어 관리하기 편하게 만드는 역할

<div></div> 블록 레벨 컨테이너
<span></span> 인라인 컨테이너


;전역속성
=> 전역속성은 모든 html태그에서 공통으로 사용할 수 있는 속성임 속성이란 태그는 부가적인 기능을 정의하는것,
    이는 선택사항 속성은 시작태그 내부에  정의. 속성의 개수는 특별한 제한이 없음
<태그명 속성명="속성값" 속성명="속성값">콘텐츠</태그명>

id: 요소에 고유한 이름을 부여하는 식별자 역할
class: 요소를 그룹 별로 묶을 수 있는 식별자 역할
style: 요소에 적용할 CSS 스타일을 선언하는 속성
title: 요소의 추가 정보를 제공하는 텍스트 속성. 사용자에게 툴팁 제공


;링크
->현재 문서에서 다른 문서로 이동하게 해주는 수단
<a href="주소">

;target 
=> 새페이지가 열릴 대상을 지정할 수 있음
// _self 현재 페이지
// _blank 새 탭
mailto:이메일
tel:번호        

;목록
-> 연관 있는 항목들을 나열한 것을 의미로

html목록은 '순서 없는 목록', '순서있는 목록'으로 구분됨
<ul> 순서 없는
<ol> 순서 있는

;input
=> 사용자로부터 값을 입력받을 수 있는 대화형 컨트롤을 나타낸다, 인라인 요소이며 단일태그임
<input />

input은 type의 값에 따라 입력 요소의 형태나 입력 데이터 유형 등이 달라짐 디폴트 값은 텍스트임

input 태그에 name이라는 식별자를 추가할 수 있음

;select 
-> 다수의 옵션을 포함할 수 있는 선택 메뉴임 (인라인 요소)
<select>
    <option>옵션들</option>
    <option>옵션들</option>
    <option>옵션들</option>
    <option>옵션들</option>
    <option>옵션들</option>
</select>
select는 input과 마찬가지로 name을 지정할 수 있으며 각각의 option에는 value 속성을
지정할 수 있음 value는 실제로 처리된 값을 나타냄


;textarea
-> textarea는 여러 줄의 일반 텍스트를 입력할 수 있는 요소임 (인라인 요소)
    역시 name을 추가하여 구별해줄 수있는 요소임
<textarea name="~~~"></textarea>

서버와 클라이언트//
클라이언트(사용자)가 요청하면 서버는 그에 대한 응답으로 정보를 제공함
클라이언트가 어떤 요청을 보내는가에 따라, 응답은 달라질 수 있음!

;form
-> 사용자가 입력한 데이터를 서버로 보내기 위해 사용하는 태그는
일반적인 서버란 정보를 제공하는 호스트(host)임

form은 입력요소를 감싸며, 입력값을 서버 측으로 제출할 수 있다.

action : 입력값을 전송할 서버의 url
method : 클라이언트가 입력한 데이터를 어떤 식으로 전송할지(GET or POST등)
<form action="example.php" method="POST">
</form>

GET : 서버에 요청을 보내어 응답을 받아냄
서버로부터 정보를 '가져오겠다'는 성격의 요청이다.

POST: 서버에 요청을 보내어 작업을 수행한다.
서버에 있는 데이터를 추가/수정/삭제한 후에 응답을 받아낸다.
서버의 정보를 '조작하겠다'는 성격의 요청이다.

;meta

meta태그는 HTML 문서에 대한 메타데이터를 정의함

;메타데이터
-> 데이터에 대한 데이터, 즉 '정보'를 의미함
    meta태그는 항상 head 태그의 안에 들어가며, 일반적으로 문자 세트, 페이지 설명
    ,키워드 문서의 작성자 및 뷰포트 설정을 지정할 때 사용된다

;meta 태그를 사용하는 이유
-> 웹 페이지에 대한 정보를 제공하므로
    검색엔진이 페이지를 검색할 때 참고할 수 있고, 검색 결과에도 반영할 수 있다.

;메타데이터 유형&속성
charset: 문자세트
http-equiv: 콘텐츠 속성 정보에 대한 http 헤더
name: 문서 정보
content: 메타데이터 내용ㄹ호


;viewport
현재 화면에 보여지고 있는 영역을 의미한다
기기별로 뷰포트가 다르기 때문에, 동일한 
웹페이지라도 기기에 따른 배율 조정이 발생해
화면의 크기가 다르게 보이는 현상이 나타남
왜?
-> 다양한 모바일 기기들이 등장하기전 웹 페이지만 존재했음
컴퓨터 화면의 웹 페이지는 웹브라우저라는 소프트웨어를 통해
페이지 크기를 조절해가며 웹을 조회할 수 있지만 모바일 기기에서는
고정된 사이즈로 조회해야 하므로 웹의 모든 콘텐트를 표시하기 위해 배율 조정을 해야함

meta태그를 통해 뷰포트 관련 설정을 추가할 수 있음
<meta name="viewport" content="width=device-width, initial-scale=1.0">


background
background-image 이미지 
background-repeat  반복
background-position  위치
background-size  채움의 정도